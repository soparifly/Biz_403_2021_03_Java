package com.callor.controller;

public class Score_02 {
	/*
	 * 정수와 실수간의 자료교환 (변환)
	 * 
	 */
	public static void main(String[] args) {

		int intNum = 100;
		float floatNum = 100.0F;

		// 정수를 표현할때 자릿수가 큰 수는 중간에 _ 를 넣어서 표현할 수 있다.

		// int, integer로 선언된 변수에는
		// -2의 31승~2의 31승 -1까지의 값만 저장할 수 있다.
		intNum = 1_000_000_000;

		// long, Long 으로 선언된 변수에는
		// -2의 64승 ~ 2의 63 -1까지의 값만 저장된다
		long longNum = 100_000_000_000_000_000_0L;
		// 333정수를 실수로 표현 3.33 * 10^2
		// 333_333_333_333_333
		// 3.33_333_333_333_333_333 * 10^14

		int intNum1 = 100;
		float floatNum1 = 100.0F;

		// 정수 값 100을 실수형 (float)변수에 저장하라
		// 100을 1*10^2으로 변환하여 저장한다
		floatNum1 = 100;

		// double 실수값 100.0을 float실수형 변수에 저장하라
		// 오류를 막기 위해서 숫자 끝에 (F,f)를 첨가한다
		floatNum1 = 100.0F;

		// intNum1에 저장된 정수를
		// "실수형으로 변환"하여 "오차를 무시"하고 저장하라
		floatNum1 = intNum1;

		// 실수값(float)을 정수형 변수에 저장하라
		// 명령을 내리면 자바 컴파일러는 이코드를 실행하면 실수값의 소수점 이하가
		// 잘릴것이다 라는것을 안다, 또한 이 코드는 분명 개발자가 실수한 것일 것이다라고 생각하고,
		// 문법 오류로 보여준다
		//개발자가 실제 값의 소수점 이하가 잘리는것을 알고있으며 소수점 이하의 값이 필요없어서 정수형 변수에 저장하고싶다 이럴때는 컴파일러에게 강제로 알려준다
		
		intNum1 = (int)1.0F; //오류가 없다는 표시로 명령문 (int)를 입력해준다
		intNum1 = (int)floatNum1;

	}
}
